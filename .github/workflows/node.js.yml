# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ react ]

jobs:
  build:
   # it will build on any host- we can do self-hosted
   runs-on: ubuntu-latest

 # this will check connection and run a command to transfer the commited files
   steps:
    - uses: actions/checkout@v2
      with:
        ref: react

    - name: Copy repository contents via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.SSH_HOST }} # IP Address of the server
        USERNAME: ${{ secrets.SSH_USERNAME }} # username of the server
        PORT: ${{ secrets.SSH_PORT }} #port of the server
        KEY: ${{ secrets.SSH_KEY }} # SSH Key Generated from the server
      with:
        source: "."
        target: "/var/www/source" # Directory of the app
   
    - name: Executing remote command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USERNAME }}
        PORT: ${{ secrets.SSH_PORT }}
        KEY: ${{ secrets.SSH_KEY }}
        command_timeout: 200m
        script: |
          cd /var/www/source

          git clean . -f
          git clean . -f

          echo "/=============================/" && \
          echo "/==== PROCESSING FRONT-END ====/" && \
          cd front-end && \
          echo "/==== INSTALLING PACKAGES ====/" && \
          npm install && \
          echo "/==== RUNNING TESTS ====/" && \
          CI=true npm run test -- --coverage && \
          rm -rf /var/www/html/front-end/coverage && mv coverage /var/www/html/front-end && \
          echo "/==== BUILDING SITE ====/" && \
          CI=true npm run build && \
          rm -rf /var/www/html/front-end/build && mv build /var/www/html/front-end

          echo "/==== BUILDING STORYBOOK ====/" && \
          CI=true npm run build-storybook && \
          rm -rf /var/www/html/front-end/storybook-static && mv storybook-static /var/www/html/front-end && \

          echo "/=============================/" && \
          echo "/==== PROCESSING API ====/" && \
          cd ../api && \
          npm install && npm run build && pm2 restart api


          echo "/=============================/" && \
          echo "/==== PROCESSING ADMIN ====/" && \
          cd ../admin && \
          npm install && npm run config:import && pm2 restart admin

    # TO DO:
    # Add scripts for admin and api server builds
