# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]

jobs:
  build:
   # it will build on any host- we can do self-hosted
   runs-on: ubuntu-latest

   # Add timeout
   timeout-minutes: 15

   # this will check connection and run a command to transfer the commited files
   steps:
    - name: Clean up app folders
      run: |
          sudo mkdir -p /var/www/source && sudo rm -rf /var/www/source

    - uses: actions/checkout@v2
      with:
        ref: main
        submodules: recursive

    - name: Copy repository contents via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.SSH_HOST }} # IP Address of the server
        USERNAME: ${{ secrets.SSH_USERNAME }} # username of the server
        PORT: ${{ secrets.SSH_PORT }} #port of the server
        KEY: ${{ secrets.SSH_KEY }} # SSH Key Generated from the server
      with:
        source: "."
        target: "/var/www/source" # Directory of the app

    - name: Copy environment files
      run: |
          sudo ls /home/env
          sudo cp /home/env/admin/.env /var/www/source/admin
          sudo cp /home/env/web/.env /var/www/source/web
          sudo cp /home/env/ifind-icons/.env /var/www/source/ifind-icons

    - name: Process icons
      run: |
          cd /var/www/source/ifind-icons
          npm install
          npm run build

    - name: Executing remote command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USERNAME }}
        PORT: ${{ secrets.SSH_PORT }}
        KEY: ${{ secrets.SSH_KEY }}
        command_timeout: 200m
        script: |
          echo "/=============================/" && \
          echo "/==== PROCESSING ADMIN ====/" && \
          cd ../admin && \
          rm -rf node_modules && \
          npm install && npm run config:import && npm run currencies:import && pm2 restart ecosystem.config.js && \

          echo "/=============================/" && \
          echo "/==== PROCESSING FRONT-END ====/" && \
          cd ../web && \
          echo "/==== INSTALLING PACKAGES ====/" && \
          npm install && \
          echo "/==== BUILDING SITE ====/" && \
          echo "Running prerender..." && \
          node scripts/prerender.js

    # TO DO:
    # Add scripts for admin and api server builds
